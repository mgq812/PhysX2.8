<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <title>Triggers</title>
  <meta http-equiv="content-type"
 content="text/html; charset=iso-8859-1">
  <meta name="generator"
 content="amaya 9.2.1, see http://www.w3.org/Amaya/">
 <link rel="stylesheet" href="/stylesheet.css" type="text/css">
</head>
<body>
<img alt="" src="images/PhysXlogo.png"
style="width: 232px; height: 90px;" align="middle"> <br>
<hr style="width: 100%; height: 2px;"><br>
<br>
<h1 style="text-align: center;">Triggers</h1>
<p>A trigger is a shape that permits other shapes to pass through it.
Each shape passing through it can create an event for the user when it
enters, leaves, or simply stays inside the shape. Triggers can be used
to implement behaviors such as automatic doors opening when an object
approaches.</p>
<p>Triggers can be created from any type of shape except wheel shapes. Triangle mesh
triggers count as hollow surfaces for collision detection, not volumes. Note that convex vs. triangle mesh and mesh vs. mesh triggers are not implemented.
Triggers are created and attached to actors just like any other shape.
The only difference is that they need to be marked as triggers in the
shape descriptor:</p>
<pre>    //This trigger is a cube.</pre>
<pre>    NxBoxShapeDesc boxDesc;</pre>
<pre>    boxDesc.dimensions = NxVec3(10.0f, 10.0f, 10.0f);<br>    boxDesc.shapeFlags |= NX_TRIGGER_ENABLE;</pre>
<pre>    NxActorDesc actorDesc;<br>    actorDesc.shapes.pushBack(&amp;boxDesc);</pre>
<pre>    NxActor * triggerActor = gScene-&gt;createActor(actorDesc);</pre>
<p>Above, NX_TRIGGER_ENABLE specifies that all possible trigger events
should be sent to the user. Alternatively, it is possible to select a subset of the flags NX_TRIGGER_ON_ENTER,
NX_TRIGGER_ON_LEAVE, and NX_TRIGGER_ON_STAY.</p>
<p>To receive trigger events, the
SDK must be told where to send them. Trigger events are passed to a user
defined object of type NxUserTriggerReport. Below is an example
implementation, plus the code used to assign it to the trigger scene:</p>
<pre>    class TriggerCallback : public NxUserTriggerReport<br>    {</pre>
<pre>        void onTrigger(NxShape&amp; triggerShape, NxShape&amp; otherShape, NxTriggerFlag status)<br>        {<br>            if(status &amp; NX_TRIGGER_ON_ENTER)<br>            {<br>                //A body entered the trigger area for the first time<br>                gNbTouchedBodies++;<br>            }</pre>
<pre>            if(status &amp; NX_TRIGGER_ON_LEAVE)<br>            {<br>                //A body left the trigger area<br>                gNbTouchedBodies--;<br>            }</pre>
<pre>            //Should not go negative<br>            NX_ASSERT(gNbTouchedBodies&gt;=0);<br>        }</pre>
<pre>    }myTriggerCallback;</pre>
<pre>    gScene-&gt;setUserTriggerReport(&amp;myTriggerCallback);</pre>
<h2>Caveats</h2>
<ul>
  <li>Trigger shapes will not contribute to a shape&#8217;s mass when
computing the mass from the shapes. For this reason, a
mass and inertia must be explicitly supplied when a dynamic actor is
created from trigger shapes alone.</li>
  <li>Triggers are excluded from raycasts and sweep tests.</li>
  <li>The <a href="basics_sdkparameters.html">SDK Parameter</a>
NX_TRIGGER_TRIGGER_CALLBACK controls if trigger events are generated
when a trigger touches another trigger.</li>
  <li>Static triggers do not trigger when touched by a static shape.</li>
  <li>All other combinations, e.g., kinematic vs. static, kinematic vs.
dynamic, dynamic trigger vs. kinematic, etc., do trigger.</li>
  <li>The state of the SDK should not be modified from within the
onTrigger() routine. In particular, objects should not be created
or destroyed. If it is necessary to modify a state, then the updates
should
be stored to a buffer and performed after the simulation step.</li>
  <li>Convex vs. triangle mesh and mesh vs. mesh triggers are not implemented.</li>
  <li>Triggers do not take part in Continuous Collision Detection (CCD)</li>
</ul>
<h2>Threading</h2>
The NxUserTriggerReport <span lang="EN-US">class is only called in the
context of the user thread. It is not necessary to make it thread safe.</span>
<h2>API Reference</h2>
<ul>
  <li><a href="./../../PhysicsSDK/classNxShape.html">NxShape</a></li>
  <li><a href="./../../PhysicsSDK/classNxShapeDesc.html">NxShapeDesc</a></li>
  <li><a href="./../../PhysicsSDK/classNxUserTriggerReport.html">NxUserTriggerReport</a><br>
  </li>
</ul>
<hr style="width: 100%; height: 2px;"><a><br>
</a>
Copyright &copy; 2008 NVIDIA Corporation, 2701 San Tomas Expressway, Santa Clara, CA 95050 U.S.A. All rights reserved. <a href="http://www.nvidia.com ">www.nvidia.com</a>
</body>
</html>
